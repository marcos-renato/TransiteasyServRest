# This is a basic workflow to help you get started with Actions
name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.0
        with:
          node-version: '20.10.0'
          
      - name: Instalação do Jest e dos pacotes para teste
        run: |
          npm install jest
          npm install

      - name: execução dos testes com Jest
        run: npm test

      - name: Autenticação no Docker Hub
      # You may pin to the exact commit or the version.
      # uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        uses: docker/login-action@v3.0.0
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Contrução da Imagem Docker
      # You may pin to the exact commit or the version.
      # uses: docker/build-push-action@4a13e500e55cf31b7a5d59a38ab2040ab0f42f56
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            marcosrenato/transiteasyservrest:${{github.run_number}}
            marcosrenato/transiteasyservrest:latest
    
      - name: CONEXÃO COM O SERVIDOR
        uses: cross-the-world/ssh-pipeline@master
        env:
          WELCOME: "ssh pipeline"
        with:
          host: ${{ secrets.DC_HOST }}
          user: ${{ secrets.DC_USER }}
          pass: ${{ secrets.DC_PASS }}
          port: ${{ secrets.DC_PORT }}
          connect_timeout: 10s
          script: |
            docker pull marcosrenato/transiteasyservrest:${{github.run_number}}
            docker run -d -p 3310:3310 marcosrenato/transiteasyservrest:${{github.run_number}}

